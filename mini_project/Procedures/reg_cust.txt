CREATE OR REPLACE PROCEDURE REG_CUST(
	P_CUST_MOBILE CUSTOMER.CUST_MOBILE%TYPE,
	P_CUST_NAME CUSTOMER.CUST_NAME%TYPE,
	P_CUST_ADDR CUSTOMER.CUST_ADDR%TYPE,
	P_CUST_CITY CUSTOMER.CUST_CITY%TYPE,
	P_USER_PASSWORD USER_LOGIN.LOG_PASS%TYPE
) IS
CURSOR CUR_MOBILE IS SELECT CUST_MOBILE FROM CUSTOMER;
FLAG CHAR:='T'; ---FLAG TO CHECK WHETHER CUSTOMER ALREADY PRESENT
CHECK_CONSTRAINT_VIOLATED EXCEPTION;
PRAGMA EXCEPTION_INIT ( CHECK_CONSTRAINT_VIOLATED, -2290 );
BEGIN
	FOR MOB IN CUR_MOBILE LOOP
		IF MOB.CUST_MOBILE=P_CUST_MOBILE THEN
			FLAG:='F';
			EXIT;
		END IF;
	END LOOP;
	IF FLAG='T' THEN
		INSERT INTO CUSTOMER
		VALUES(P_CUST_MOBILE,P_CUST_NAME,P_CUST_ADDR,P_CUST_CITY);
		IF SQL%FOUND THEN
			INSERT INTO USER_LOGIN
			VALUES(P_CUST_MOBILE,P_USER_PASSWORD,'CUSTOMER');
		END IF;
		COMMIT;
		DBMS_OUTPUT.PUT_LINE('CUSTOMER REGISTERED');
		DBMS_OUTPUT.PUT_LINE('PLEASE LOGIN BY WRITING');
		DBMS_OUTPUT.PUT_LINE('EXEC LOGIN(<YOUR ID>,<YOUR PASSWORD>)');
	ELSE
		DBMS_OUTPUT.PUT_LINE('ACCOUNT ALREADY PRESENT WITH CURRENT NUMBER');
	END IF;
EXCEPTION 
	WHEN DUP_VAL_ON_INDEX THEN
		DBMS_OUTPUT.PUT_LINE('ACCOUNT ALREADY PRESENT');
	WHEN CHECK_CONSTRAINT_VIOLATED THEN
		DBMS_OUTPUT.PUT_LINE('CHECK CONSTRAINTS VIOLATED');
		DBMS_OUTPUT.PUT_LINE('CUSTOMER NOT REGISTERED');
END REG_CUST;